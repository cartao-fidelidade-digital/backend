name: Docker release

on:
  push:
    branches:
      - release/v*

jobs:
  build-and-push:
    name: Build and push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version from release branch
        run: |
          branch_name=${GITHUB_REF#refs/heads/}
          version=${branch_name#release/v}
          echo "Version: $version"
          echo "version=$version" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/clubee.backend:${{ env.version }} -f authmicroservice/Dockerfile authmicroservice/
          docker tag ${{ secrets.DOCKER_USERNAME }}/clubee.backend:${{ env.version }} ${{ secrets.DOCKER_USERNAME }}/clubee.backend:latest

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/clubee.backend:${{ env.version }}
          docker push ${{ secrets.DOCKER_USERNAME }}/clubee.backend:latest

      - name: Set up GitHub token for tag push
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Create new GitHub Tag
        run: |
          git tag -a v${{ env.version }} -m "Release v${{ env.version }}"
          git push origin v${{ env.version }}
